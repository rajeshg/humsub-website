---
import { getCollection } from "astro:content";
import EventCard from "../../components/EventCard.astro";
import LayoutWithHighlight from "../../layouts/LayoutWithHighlight.astro";
const eventsCollection = await getCollection("events");

// sort asc order of upcoming events
const upcomingEvents = eventsCollection
	.filter((event) => event.data.endDate > new Date())
	.sort((a, b) => a.data.endDate.getTime() - b.data.endDate.getTime());
// sort descending order and limit it to 3
const pastEvents = eventsCollection
	.filter((event) => event.data.endDate <= new Date())
	.sort((a, b) => b.data.endDate.getTime() - a.data.endDate.getTime())
	.slice(0, 3);
---

<LayoutWithHighlight title="Hum Sub - Events">
    <div class="container mx-auto px-4 py-8 max-w-6xl">
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-primary dark:text-amber-300 mb-6">Upcoming Events</h1>
            
            {upcomingEvents.length > 0 ? (
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    {
                        upcomingEvents.map((event) => (
                            <EventCard
                                title={event.data.title}
                                slug={event.data.slug}
                                startDate={event.data.startDate.toString()}
                                endDate={event.data.endDate.toString()}
                                location={event.data.location}
                                image={event.data.image}
                            />
                        ))
                    }
                </div>
            ) : (
                <div class="bg-base-200 dark:bg-slate-800 rounded-lg p-8 text-center">
                    <p class="text-lg">No upcoming events at this time. Check back soon!</p>
                    <p class="mt-2 text-sm text-base-content/70 dark:text-slate-400">
                        Subscribe to our newsletter for updates on future events.
                    </p>
                </div>
            )}
        </div>

        <div class="divider my-12 before:bg-primary/30 after:bg-primary/30 dark:before:bg-slate-700 dark:after:bg-slate-700"></div>

        <div>
            <h2 class="text-2xl font-bold text-primary dark:text-amber-300 mb-6">Past Events</h2>
            
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {
                    pastEvents.map((event) => (
                        <EventCard
                            title={event.data.title}
                            slug={event.data.slug}
                            startDate={event.data.startDate.toDateString()}
                            endDate={event.data.endDate.toDateString()}
                            location={event.data.location}
                            image={event.data.image}
                            isPast={true}
                        />
                    ))
                }
            </div>
            
            {pastEvents.length > 0 && (
                <div class="flex justify-center mt-8">
                    <a href="/events/archive" class="btn btn-outline btn-primary dark:border-amber-400 dark:text-amber-300">
                        View All Past Events
                    </a>
                </div>
            )}
        </div>
    </div>
</LayoutWithHighlight>
